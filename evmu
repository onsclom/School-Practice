#!/bin/bash

USER=merrick

SERVER=java.cs.unlv.edu
da=`date | sed 's/ /_/g'`

if [ $USER == "NONE" ]; then
  echo "Please replace the 'NONE' in line 3 of this script with your username on $SERVER and re-run the script"
  exit
fi

if [ $# -eq 0 ] ; then
    ./evmu help
    exit
fi
  
if [ $1 == "install" ]; then
    # is the phase even open?
    case $2 in
	1|2|3|4|5 )
	    if  [ `ssh $USER@$SERVER /home/matt/CS326/EVM/open $2` != "Open" ] ; then
		echo "Phase $2 is not open for handout yet!"
		exit
	    fi
	    ;;
	* ) 
	    echo "Phase $2 does not exists; select 1 through 5"
	    exit
	    ;;
    esac
    # if the phase is installed move it
    if [ -d Phase$2 ]; then
	echo "Phase$2 directory already exists"
	echo "Moving it to Phase$2-$da"
	mv Phase$2 Phase$2-$da
    fi

    echo "Downloading phase $2"
    mkdir Phase$2
	    # cp/scp the phase
    if [ $HOSTNAME == "java.cs.unlv.edu" ]; then
	cp /home/matt/CS326/EVM/Phase$2/EVM-Phase$2-Handout.tar Phase$2/.
    else
	scp $USER@$SERVER:/home/matt/CS326/EVM/Phase$2/EVM-Phase$2-Handout.tar Phase$2/.
    fi
 
    cd Phase$2
    echo "Unpacking phase $2 in Phase$2/"
    tar xvf EVM-Phase$2-Handout.tar > /dev/null 2>&1
    rm -f EVM-Phase$2-Handout.tar

    rm -rf ../JavaDoc
    mv JavaDoc ../.
    cd ..
    echo "Done!"
elif [ $1 == "clean" ]; then
    if ! [ $# -eq 2 ] ; then
	echo "Usage: evmu clean <phase>"
	exit
    fi
    cnt=`ls | grep "Phase$2-" | wc -l | sed 's/ //g'`
    echo $cnt
    if [ $cnt -gt 0 ]; then
        echo "The following old directories for phase $2 exist:"
	ls | grep "Phase$2-"
    fi
    if [ $cnt -eq 0 ]; then
	echo "There are no old directories to remove for phase $2!"
	exit
    fi
    case $2 in
	1|2|3|4|5 ) 
	    read -p "Are you sure you want to remove old directories of phase $2 [y/n] ? " ans
	    if [ $ans == 'y' ]; then	    
		echo "Ok - it is too late now!"
		echo "rm -rf Phase$2-*"
		rm -rf Phase$2-*
	    fi
	    ;;
	* ) echo "Phase $2 does not exits; select 1 thorugh 5."
	    ;;
    esac
elif [ $1 == "patch" ]; then
    if ! [ $# -eq 3 ] ; then
	echo "Usage: evmu patch <phase number> <directory to patch from>"
	exit
    fi
    if [ -d Phase$2 ]; then
	if [ -d $3 ]; then
	    echo "Patching phase $2 with files from $3"
	    case $2 in 
		1 ) echo "Copying OperandStack.java, EVM.java" #ok
		    cp $3/src/EVM.java Phase$2/src/EVM.java
		    cp $3/src/OperandStack/OperandStack.java Phase$2/src/OperandStack/OperandStack.java
		    ;;
		2 ) echo "Copying EVM.java" #ok
		    cp $3/src/EVM.java Phase$2/src/EVM.java 
		    ;;
		3 ) echo "Copying Execution.java, Activation.java" #ok
		    cp $3/src/Activation/Activation.java Phase$2/src/Activation/Activation.java
		    cp $3/src/Execution/Execution.java Phase$2/src/Execution/Execution.java
		    ;;
		4 ) echo "Copying Execution.kava" #ok
		    cp $3/src/Execution/Execution.java Phase$2/src/Execution/Execution.java
		    ;;
		5 ) echo "Copying Execution.java" # not sure if done
		    cp $3/src/Execution/Execution.java Phase$2/src/Execution/Execution.java
		    ;;
		* ) echo "Invalid Phase number"
		    ;;
	    esac
	else
	    echo "Invalid directory name"
	    exit
	fi
    else
	echo "Phase $2 not yet installed"
    fi
elif [ $1 == "isopen" ] ; then
    echo "Phase $2 is `ssh $USER@$SERVER cat /home/matt/CS326/EVM/.Phase$2`"
elif [ $1 == "tar" ] ; then
    if ! [ $# -eq 2 ] ; then
	echo "Usage: evmu tar <phase number>"
	exit
    fi
    cd Phase$2
    ant clean
    tar cvf EVM-Phase$2-$USER.tar src id.txt evm build.xml Lib Include
    cd ..
    echo "Please hand in the 'EVM-Phase$2-$USER.tar' file located in the Phase$2 directory without renaming it."
elif [ $1 == "help" ] ; then
    echo "Usage:  evmu install <phase number>"
    echo "        evmu patch <phase to patch> <dir to patch from>"
    echo "        evmu tar <phase>"
    echo "        evmu isopen <phase>"
else
    echo "What do you want me to do again? Be more specific if you want my help"
    echo "Type ./evmu help"
fi
